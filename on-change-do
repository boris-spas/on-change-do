#!/usr/bin/env bash

__ScriptVersion="0.1"

sha=0
previous_sha=0
timeout=1
lazy=false
all=false
#===  FUNCTION  ================================================================
#         NAME:  execute_command
#  DESCRIPTION:  Execute the command giveng in the command line argument.     
#===============================================================================
function execute_command() {
	clear
	echo -en "executing \`$cmd.\`\n"
	echo -en "----------------------------------------------------------------"
	echo -en "\n\n"
	eval $cmd
	echo -en "\n\n"
	echo -en "----------------------------------------------------------------"
	echo -en "\ndone. Waiting for new changes on $path."
}

#===  FUNCTION  ================================================================
#         NAME:  update_sha
#  DESCRIPTION:  Updates the global sha varialbe by calculating the hash of the
#                path using shasum.
#===============================================================================
function update_sha() {
	if [[ $all == true ]]; then
		sha=$(find "$path" -type f \
			| sort -z | xargs shasum 2> /dev/null | shasum)
	else
		sha=$(find "$path" -type f -not -path '*/\.*' \
			| sort -z | xargs shasum 2> /dev/null | shasum)
	fi
}

#===  FUNCTION  ================================================================
#         NAME:  usage
#  DESCRIPTION:  Display usage information.
#===============================================================================
function usage ()
{
				cat <<- EOT

  Usage :  $0 [options] /path/to/oberve command_to_execute_on_change

  Options:
  -a|all        Include hidden files in obervation.
  -t|timeout    Set the time to sleep between looking for changes.
  -l|lazy       Don't react to changes that happen during execution of the
                command. Usefull if	the command changes the oberved to path. 
  -h|help       Display this message.
  -v|version    Display script version.

				EOT
}   

#-------------------------------------------------------------------------------
#  Handle command line arguments
#-------------------------------------------------------------------------------
while getopts "at:lhv" opt
do
  case $opt in

		a|all      )  all=true                                        ;;

		t|timeout  )  timeout=$OPTARG;                                ;;
		
		l|lazy     )  lazy=true                                       ;;
		
		h|help     )  usage; exit 0                                   ;;

		v|version  )  echo "$0 -- Version $__ScriptVersion"; exit 0   ;;

		\? )  echo -e "\n  Option does not exist : $OPTARG\n"
				  usage; exit 1                                       ;;

  esac    # --- end of case ---
done
shift $(($OPTIND-1))

#-------------------------------------------------------------------------------
#  Main script                  
#-------------------------------------------------------------------------------
path=$1
shift
cmd=$*
update_sha
previous_sha=$sha
echo -en "Observing $path and will execute \`$cmd\`"
while true; do
	if [[ "$sha" != "$previous_sha" ]]; then
		execute_command
		previous_sha=$sha		
		if [[ $lazy == true ]]; then
			update_sha
			previous_sha=$sha
			continue
		fi
	fi
	update_sha
	sleep "$timeout"
done
